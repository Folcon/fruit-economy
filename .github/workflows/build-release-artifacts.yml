name: Build Release Artifacts
on:
  push:
    tags:
      - v*
#  release:
#    types: [created]
#  workflow_run:
#    workflows: [Release]
#    types:
#      - completed
jobs:
  build-deb:
    strategy:
      matrix:
        os: [
            ubuntu-latest,
            macos-latest,
            windows-latest
        ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: prepare java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: install clojure
        uses: DeLaGuardo/setup-clojure@3.7
        with:
          lein: latest

      - name: download jwm artifact jars
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repo: HumbleUI/JWM
          workflow: build-deploy.yml
          workflow_conclusion: success
          name: jars
          run_id: 1718998078

      - name: recursively print info in current directory macos + linux
        if: ${{ matrix.os != 'windows-latest' }}
        run: ls && find . -maxdepth 2 -type d -exec ls -ld "{}" \;

      - name: recursively print info in current directory windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: tree /F

      - name: install jwm to maven repo macos + li
        if: ${{ matrix.os != 'windows-latest' }}
        run: mvn install:install-file -Dfile=jwm-b3fecb126a.jar -DpomFile=maven/META-INF/maven/io.github.humbleui/jwm/pom.xml

      - name: install jwm to maven repo windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          copy .\maven\META-INF\maven\io.github.humbleui\jwm\pom.xml pom.xml \
          && $env:GROUP_ID=(mvn -q -Dexec.executable=echo -Dexec.args='${project.groupId}' --non-recursive exec:exec) && \
          && $env:ARTIFACT_ID=(mvn -q -Dexec.executable=echo -Dexec.args='${project.artifactId}' --non-recursive exec:exec) && \
          && $env:VERSION=(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) && \
          && $env:PACKAGING=(mvn -q -Dexec.executable=echo -Dexec.args='${project.packaging}' --non-recursive exec:exec) && \          
          && mvn install:install-file -Dfile=.\jwm-b3fecb126a.jar -DgroupId=$env:GROUP_ID -DartifactId=$env:ARTIFACT_ID -Dversion=$env:VERSION -Dpackaging=$env:PACKAGING

      - name: build uberjar
        run: lein uberjar

      - name: create version number for app
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

      - name: set conditional app-version arg
        run: |
          [[ ${RELEASE_VERSION%.*.*} == 0 ]] \
          && echo "VERSION_ARG=" >> $GITHUB_ENV \
          || echo "VERSION_ARG=--app-version ${RELEASE_VERSION}" >> $GITHUB_ENV

      - name: build package on linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: jpackage @jpackage/common @jpackage/linux $VERSION_ARG

      - name: build package on macos
        if: ${{ matrix.os == 'macos-latest' }}
        run: jpackage @jpackage/common @jpackage/mac $VERSION_ARG

      - name: build package on windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: jpackage @jpackage/common @jpackage/windows $VERSION_ARG

      - name: recursively print info again in current directory macos + linux
        if: ${{ matrix.os != 'windows-latest' }}
        run: ls && find . -maxdepth 2 -type d -exec ls -ld "{}" \;

      - name: recursively print info again in current directory windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: tree /F

      - name: rename file on linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: mv fruit-economy_1.0-1_amd64.deb fruit-economy_${{ env.RELEASE_VERSION }}_amd64.deb

      - name: rename file on macos
        if: ${{ matrix.os == 'macos-latest' }}
        run: mv Fruit\ Economy-1.0.dmg Fruit\ Economy-${{ env.RELEASE_VERSION }}.dmg

      #- name: rename file on windows
      #  if: ${{ matrix.os == 'windows-latest' }}
      #  run: mv fruit-economy_1.0-1_amd64.deb fruit-economy_${{ env.RELEASE_VERSION }}_amd64.deb

      - name: release artifacts on linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: softprops/action-gh-release@v1
        with:
          files: |
            fruit-economy_${{ env.RELEASE_VERSION }}_amd64.deb

          #upload_url: ${{ github.event.release.upload_url }}
          #asset_path: fruit-economy-${{ github.ref_name }}-amd64.deb
          #asset_name: fruit-economy-${{ github.ref_name }}-amd64.deb
          #asset_content_type: application/vnd.debian.binary-package

      - name: release artifacts on macos
        if: ${{ matrix.os == 'macos-latest' }}
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Fruit Economy-${{ env.RELEASE_VERSION }}.dmg
          #upload_url: ${{ github.event.release.upload_url }}
          #asset_path: fruit-economy-${{ github.ref_name }}.dmg
          #asset_name: fruit-economy-${{ github.ref_name }}.dmg
          #asset_content_type: application/x-apple-diskimage

      - name: release artifacts on windows
        if: ${{ matrix.os == 'windows-latest' }}
        uses: softprops/action-gh-release@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: fruit-economy-${{ github.ref_name }}.exe
          asset_name: fruit-economy-${{ github.ref_name }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable
