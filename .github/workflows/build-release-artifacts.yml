name: Build Release Artifacts
on:
  release:
    types: [created]
  workflow_run:
    workflows: [Release]
    types:
      - completed
jobs:
  build-deb:
    strategy:
      matrix:
        os: [
            ubuntu-latest,
            macos-latest,
            # windows-latest
        ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: prepare java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: install clojure
        uses: DeLaGuardo/setup-clojure@3.7
        with:
          lein: latest

      - name: download jwm artifact jars
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          repo: HumbleUI/JWM
          workflow: build-deploy.yml
          workflow_conclusion: success
          name: jars
          run_id: 1718998078

      - name: recursively print info in current directory macos + linux
        if: ${{ matrix.os != 'windows-latest' }}
        run: ls && find . -maxdepth 2 -type d -exec ls -ld "{}" \;

      - name: recursively print info in current directory windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: tree /F

      - name: install jwm to maven repo macos + li
        if: ${{ matrix.os != 'windows-latest' }}
        run: mvn install:install-file -Dfile=jwm-b3fecb126a.jar -DpomFile=maven/META-INF/maven/io.github.humbleui/jwm/pom.xml

      - name: install jwm to maven repo windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: mvn install:install-file -Dfile=jwm-b3fecb126a.jar -DpomFile=maven\META-INF\maven\io.github.humbleui\jwm\pom.xml

      - name: build uberjar
        run: lein uberjar

      - name: build package on linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: jpackage @jpackage/common @jpackage/linux

      - name: build package on macos
        if: ${{ matrix.os == 'macos-latest' }}
        run: jpackage @jpackage/common @jpackage/mac

      - name: build package on windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: jpackage @jpackage/common @jpackage/windows

      - name: recursively print info again in current directory macos + linux
        if: ${{ matrix.os != 'windows-latest' }}
        run: ls && find . -maxdepth 2 -type d -exec ls -ld "{}" \;

      - name: recursively print info again in current directory windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: tree /F

      - name: release artifacts on linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: softprops/action-gh-release@v1
        with:
          files: |
            "Fruit Economy-1.0.deb"

          #upload_url: ${{ github.event.release.upload_url }}
          #asset_path: fruit-economy-${{ github.ref_name }}-amd64.deb
          #asset_name: fruit-economy-${{ github.ref_name }}-amd64.deb
          #asset_content_type: application/vnd.debian.binary-package

      - name: release artifacts on macos
        if: ${{ matrix.os == 'macos-latest' }}
        uses: softprops/action-gh-release@v1
        with:
          files: |
            "Fruit Economy-1.0.dmg"
          #upload_url: ${{ github.event.release.upload_url }}
          #asset_path: fruit-economy-${{ github.ref_name }}.dmg
          #asset_name: fruit-economy-${{ github.ref_name }}.dmg
          #asset_content_type: application/x-apple-diskimage

      - name: release artifacts on windows
        if: ${{ matrix.os == 'windows-latest' }}
        uses: softprops/action-gh-release@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: fruit-economy-${{ github.ref_name }}.exe
          asset_name: fruit-economy-${{ github.ref_name }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable
